message TaxCollectorOrderedSpellRemoveRequest {
	string tax_collector_uid = 1;
	int32 slot_id = 2;
}

message TaxCollectorAttackResultEvent {
	bool dead = 1;
	int32 first_name_id = 2;
	int32 last_name_id = 3;
	MapExtendedCoordinates coordinates = 4;
	string alliance_uid = 5;
	string alliance_tag = 6;
}

message TaxCollectorMovement {
	TaxCollectorMovement.Types.TaxCollectorMovementType movement_type = 1;
	int32 first_name_id = 2;
	int32 last_name_id = 3;
	MapExtendedCoordinates coordinates = 4;
	int64 player_id = 5;
	string player_name = 6;
	enum TaxCollectorMovementType {
		TAXCOLLECTORUNKNOWNACTION = 0;
		TAXCOLLECTORHIRED = 1;
		TAXCOLLECTORHARVESTED = 2;
		TAXCOLLECTORDEFEATED = 3;
		TAXCOLLECTORDESTROYED = 4;
	}
}

message TaxCollectorOrderedSpellUpdatedEvent {
	string tax_collector_uid = 1;
	repeated TaxCollectorOrderedSpell spells = 2;
}

message TaxCollectorErrorEvent {
	TaxCollectorErrorEvent.Types.TaxCollectorErrorReason reason = 1;
	enum TaxCollectorErrorReason {
		TAXCOLLECTORERRORUNKNOWN = 0;
		TAXCOLLECTORNOTFOUND = 1;
		TAXCOLLECTORNOTOWNED = 2;
		TAXCOLLECTORNORIGHTS = 3;
		TAXCOLLECTORMAXREACHED = 4;
		TAXCOLLECTORALREADYONE = 5;
		TAXCOLLECTORCANTHIREYET = 6;
		TAXCOLLECTORCANTHIREHERE = 7;
		TAXCOLLECTORNOTENOUGHKAMAS = 8;
	}
}

message TaxCollectorPresetsUpdatesListenStopRequest {
}

message TaxCollectorFightRequest {
}

message TaxCollectorAttackedEvent {
	int32 first_name_id = 1;
	int32 last_name_id = 2;
	MapExtendedCoordinates coordinates = 3;
	string alliance_uid = 4;
	string alliance_tag = 5;
}

message TaxCollectorPresetsEvent {
	repeated TaxCollectorPreset presets = 1;
}

message TaxCollectorUpdatesListenStartRequest {
	string tax_collector_uid = 1;
}

message TaxCollectorEquipmentUpdateEvent {
	string tax_collector_uid = 1;
	ObjectItemInventory object = 2;
	bool added = 3;
	repeated CharacterCharacteristic characteristics = 4;
}

message TaxCollectorRemovedEvent {
	string tax_collector_uid = 1;
}

message TaxCollectorPresetsUpdatesListenStartRequest {
}

message TaxCollectorAddedEvent {
	int64 caller_id = 1;
	TaxCollectorInformation tax_collector = 2;
}

message TaxCollectorPresetSpellUpdatedEvent {
	string preset_uid = 1;
	repeated TaxCollectorOrderedSpell spells = 2;
}

message TaxCollectorOrderedSpellMoveRequest {
	string tax_collector_uid = 1;
	int32 from_slot_id = 2;
	int32 to_slot_id = 3;
}

message TaxCollectorUpdatesListeningConfirmationEvent {
	TaxCollectorInformation information = 1;
}

message TaxCollectorStateUpdateEvent {
	string tax_collector_uid = 1;
	TaxCollectorState state = 2;
}

message TaxCollectorPresetSpellRemoveRequest {
	string preset_uid = 1;
	int32 slot_id = 2;
}

message TaxCollectorPresetSpellMoveRequest {
	string preset_uid = 1;
	int32 from_slot_id = 2;
	int32 to_slot_id = 3;
}

message TaxCollectorMovementsOfflineEvent {
	repeated TaxCollectorMovement movements = 1;
}

message TaxCollectorTopListEvent {
	repeated TaxCollectorInformation dungeon_tax_collectors_information = 1;
	repeated TaxCollectorInformation world_tax_collectors_information = 2;
}

message TaxCollectorUpdatesListenStopRequest {
	string tax_collector_uid = 1;
}

message TaxCollectorPresetSpellAddRequest {
	string preset_uid = 1;
	TaxCollectorOrderedSpell spell = 2;
}

message TaxCollectorOrderedSpellAddRequest {
	string tax_collector_uid = 1;
	TaxCollectorOrderedSpell added_spell = 2;
}

message TaxCollectorHarvestedEvent {
	string tax_collector_uid = 1;
	int64 harvester_id = 2;
	string harvester_name = 3;
}

