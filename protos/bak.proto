message BakBuyValidationEvent {
	BakTransactionValidationEvent transaction_validation = 1;
	int64 amount = 2;
	string email = 3;
}

message BakApiKeyEvent {
	string token = 1;
}

message BakActionEvent {
	int64 kamas = 1;
	int64 amount = 2;
	int32 rate = 3;
	BidAction bid_action = 4;
	string transaction_uuid = 5;
}

message BakBufferListRequest {
}

message BakBufferListEvent {
	repeated BufferInformation buffers = 1;
}

message BakApiTokenRequest {
}

message BakTransactionValidationEvent {
	BidAction bid_action = 1;
	BakTransactionValidationEvent.Types.BidValidation result = 2;
	enum BidValidation {
		BIDGENERICERROR = 0;
		BIDBUFFEROVERLOAD = 1;
		BIDOFFERDOESNTEXIST = 2;
		BIDOFFERALREADYEXISTS = 3;
		BIDNOTENOUGHKAMAS = 4;
		BIDNOTENOUGHOGRINES = 5;
		BIDSERVERMAINTENANCE = 6;
		BIDPLAYERINDEBT = 7;
		BIDOFFERISYOURS = 8;
		SUCCESS = 9;
	}
}

message BufferInformation {
	int64 buffer_id = 1;
	int64 buffer_amount = 2;
}

message BakShopTokenEvent {
	string token = 1;
}

message BakActionRequest {
	int64 kamas = 1;
	int64 ogrines = 2;
	int32 rate = 3;
	BidAction bid_action = 4;
}

message BakConsumeBufferRequest {
}

message BakShopTokenRequest {
}

message BakCancelBidRequest {
	int64 bid_id = 1;
	BakCancelBidRequest.Types.BidCancellationType bid_cancellation_type = 2;
	enum BidCancellationType {
		UNKNOWNTYPE = 0;
		CLASSICTYPE = 1;
		FRAUDTYPE = 2;
	}
}

message BakTransactionValidationRequest {
	string transaction_uuid = 1;
}

enum BidAction {
	BIDINVALIDACTION = 0;
	BIDCONSUMEBUFF = 1;
	BIDCANCEL = 2;
	BIDCREATEKAMA = 3;
	BIDCREATEOGRINE = 4;
	BIDBUYKAMA = 5;
	BIDBUYOGRINE = 6;
}

