syntax = "proto3";

package com.ankama.dofus.server.game.protocol.achievement;

message AchievedAchievement {
	int32 achievement_id = 1;
	int64 achieved_by = 2;
	optional int32 finished_level = 3;
	int32 pioneer_rank = 4;
}

message Achievement {
	int32 achievement_id = 1;
	repeated .com.ankama.dofus.server.game.protocol.achievement.Achievement.AchievementObjective achievement_objectives = 2;

	message AchievementObjective {
		int32 objective_id = 1;
		int64 max_value = 2;
		optional int64 current_value = 3;
	}
}

message AchievementDetailsEvent {
	.com.ankama.dofus.server.game.protocol.achievement.Achievement achievement = 1;
}

message AchievementDetailsRequest {
	int32 achievement_id = 1;
}

message AchievementFinishedEvent {
	.com.ankama.dofus.server.game.protocol.achievement.AchievedAchievement achievement = 1;
}

message AchievementFinishedInformationEvent {
	.com.ankama.dofus.server.game.protocol.achievement.AchievedAchievement achievement = 1;
	string player_name = 2;
	int64 player_id = 3;
}

message AchievementRewardRequest {
	int32 achievement_id = 1;
}

message AchievementRewardResultEvent {
	int32 achievement_id = 1;
	bool success = 2;
}

message AchievementsAlmostFinishedDetailedEvent {
	repeated .com.ankama.dofus.server.game.protocol.achievement.Achievement almost_finished_achievements = 1;
}

message AchievementsAlmostFinishedDetailedRequest {
}

message AchievementsDetailedEvent {
	repeated .com.ankama.dofus.server.game.protocol.achievement.Achievement achievements = 1;
}

message AchievementsDetailedRequest {
	int32 category_id = 1;
}

message AchievementsEvent {
	repeated .com.ankama.dofus.server.game.protocol.achievement.AchievedAchievement achieved_achievements = 1;
}

message AchievementsPioneerRanksRequest {
}

message AchievementsPioneerRanksResponse {
	repeated .com.ankama.dofus.server.game.protocol.achievement.AchievementsPioneerRanksResponse.AchievementPioneerRank achievements_pioneer_ranks = 1;

	message AchievementPioneerRank {
		int32 achievement_id = 1;
		int32 pioneer_rank = 2;
	}
}

