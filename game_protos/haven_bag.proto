message HavenBagInvitationRequest {
	int64 guest_id = 1;
}

message HavenBagPermissionsUpdateRequest {
	int32 permissions = 1;
}

message Element {
	int32 cell_id = 1;
	int32 element_id = 2;
	int32 orientation = 3;
}

message HavenBagChangeRoomRequest {
	int32 room_id = 1;
}

message HavenBagInvitationClosedEvent {
	Character host_information = 1;
}

message HavenBagInvitationOfferedEvent {
	Character host_information = 1;
	int64 time_before_cancel = 2;
}

message HavenBagEditFinishedEvent {
}

message HavenBagRoomUpdateEvent {
	HavenBagRoomUpdateEvent.Types.HavenBagRoomAction action = 1;
	repeated HavenBagRoomUpdateEvent.Types.HavenBagRoomPreview preview = 2;
	enum HavenBagRoomAction {
		HAVEN_BAG_ROOM_DISPATCH = 0;
		HAVEN_BAG_ROOM_UPDATE = 1;
	}
	message HavenBagRoomPreview {
		int32 room_id = 1;
		int32 theme_id = 2;
	}
}

message HavenBagInvitationEvent {
	Character guest_information = 1;
	bool accepted = 2;
}

message HavenBagInvitationAnswerRequest {
	bool accepted = 1;
}

message HavenBagFurnitureCloseRequest {
}

message HavenBagEditRequest {
}

message HavenBagFurnitureRequest {
	repeated Element furniture = 1;
}

message HavenBagFurnitureOpenRequest {
}

message HavenBagPermissionsUpdateEvent {
	int32 permissions = 1;
}

message HavenBagEditStartEvent {
}

message HavenBagDailyLotteryEvent {
	HavenBagDailyLotteryEvent.Types.DailyLotteryResult result = 1;
	optional int64 game_action_id = 2;
	enum DailyLotteryResult {
		HAVEN_BAG_DAILY_LOTTERY_OK = 0;
		HAVEN_BAG_DAILY_LOTTERY_ALREADY_USED = 1;
		HAVEN_BAG_DAILY_LOTTERY_ERROR = 2;
	}
}

message HavenBagExitRequest {
}

message HavenBagFurnitureEvent {
	repeated Element furniture = 1;
}

message HavenBagKickRequest {
	int64 guest_id = 1;
}

message HavenBagThemeChangeRequest {
	int32 theme = 1;
}

message HavenBagPackListEvent {
	repeated int32 packs_id = 1;
}

message HavenBagEnterRequest {
	int64 owner = 1;
}

message HavenBagEditCancelRequest {
}

